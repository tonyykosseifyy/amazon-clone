[{"C:\\Users\\toshiba\\new-project\\src\\index.js":"1","C:\\Users\\toshiba\\new-project\\src\\reducer.js":"2","C:\\Users\\toshiba\\new-project\\src\\actions.js":"3","C:\\Users\\toshiba\\new-project\\src\\components\\Navbar.js":"4","C:\\Users\\toshiba\\new-project\\src\\Home.js":"5","C:\\Users\\toshiba\\new-project\\src\\components\\Category.js":"6","C:\\Users\\toshiba\\new-project\\src\\components\\Body.js":"7","C:\\Users\\toshiba\\new-project\\src\\components\\Categories.js":"8","C:\\Users\\toshiba\\new-project\\src\\App.js":"9","C:\\Users\\toshiba\\new-project\\src\\components\\CategoryProduct.js":"10","C:\\Users\\toshiba\\new-project\\src\\components\\Users.js":"11","C:\\Users\\toshiba\\new-project\\src\\components\\Product.js":"12","C:\\Users\\toshiba\\new-project\\src\\components\\Sign.js":"13","C:\\Users\\toshiba\\new-project\\src\\components\\Cart.js":"14","C:\\Users\\toshiba\\new-project\\src\\components\\Products.js":"15","C:\\Users\\toshiba\\new-project\\src\\CountriesProject\\App.js":"16","C:\\Users\\toshiba\\new-project\\src\\CountriesProject\\components\\Home.js":"17","C:\\Users\\toshiba\\new-project\\src\\CountriesProject\\components\\Header.js":"18","C:\\Users\\toshiba\\new-project\\src\\CountriesProject\\actions.js":"19","C:\\Users\\toshiba\\new-project\\src\\CountriesProject\\components\\Country.js":"20","C:\\Users\\toshiba\\new-project\\src\\CountriesProject\\components\\SingleCountry.js":"21","C:\\Users\\toshiba\\new-project\\src\\CountriesProject\\components\\Borders.js":"22","C:\\Users\\toshiba\\new-project\\src\\CountriesProject\\components\\Map.js":"23","C:\\Users\\toshiba\\new-project\\src\\CountriesProject\\useFetch.js":"24","C:\\Users\\toshiba\\new-project\\src\\CountriesProject\\reducer.js":"25"},{"size":492,"mtime":1612518059621,"results":"26","hashOfConfig":"27"},{"size":1827,"mtime":1610618620291,"results":"28","hashOfConfig":"27"},{"size":880,"mtime":1612445855628,"results":"29","hashOfConfig":"27"},{"size":3886,"mtime":1610644615079,"results":"30","hashOfConfig":"27"},{"size":1256,"mtime":1610630176267,"results":"31","hashOfConfig":"27"},{"size":1361,"mtime":1610105328728,"results":"32","hashOfConfig":"27"},{"size":4451,"mtime":1610724382858,"results":"33","hashOfConfig":"27"},{"size":1694,"mtime":1610620667420,"results":"34","hashOfConfig":"27"},{"size":1653,"mtime":1612518211064,"results":"35","hashOfConfig":"27"},{"size":2896,"mtime":1615547699707,"results":"36","hashOfConfig":"27"},{"size":1148,"mtime":1610034916251,"results":"37","hashOfConfig":"27"},{"size":2231,"mtime":1610640836833,"results":"38","hashOfConfig":"27"},{"size":3451,"mtime":1615549397752,"results":"39","hashOfConfig":"27"},{"size":2379,"mtime":1610723142153,"results":"40","hashOfConfig":"27"},{"size":3779,"mtime":1615548985388,"results":"41","hashOfConfig":"27"},{"size":1013,"mtime":1612445520362,"results":"42","hashOfConfig":"27"},{"size":6191,"mtime":1612444321139,"results":"43","hashOfConfig":"27"},{"size":1068,"mtime":1612196271055,"results":"44","hashOfConfig":"27"},{"size":90,"mtime":1612445513595,"results":"45","hashOfConfig":"27"},{"size":1187,"mtime":1612347324888,"results":"46","hashOfConfig":"27"},{"size":4928,"mtime":1612444487701,"results":"47","hashOfConfig":"27"},{"size":1670,"mtime":1612434854990,"results":"48","hashOfConfig":"27"},{"size":1040,"mtime":1612442767238,"results":"49","hashOfConfig":"27"},{"size":2132,"mtime":1612445539077,"results":"50","hashOfConfig":"27"},{"size":330,"mtime":1612445628900,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1vy4qao",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"95"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"95"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"95"},"C:\\Users\\toshiba\\new-project\\src\\index.js",[],["117","118"],"C:\\Users\\toshiba\\new-project\\src\\reducer.js",[],"C:\\Users\\toshiba\\new-project\\src\\actions.js",[],"C:\\Users\\toshiba\\new-project\\src\\components\\Navbar.js",[],"C:\\Users\\toshiba\\new-project\\src\\Home.js",["119","120","121"],"import React,{ useEffect } from 'react' ;\nimport { useDispatch , useSelector } from 'react-redux' ;\nimport { addCategories } from './actions' ;\nimport './Home.css';\nimport Navbar from './components/Navbar' ;\nimport Body from './components/Body' ;\nimport { addUsers , randomProducts } from './actions' ;\nimport { Redirect } from 'react-router-dom' ;\n\nfunction Home() {\n    const loggedIn = useSelector(state => state.user.firstname)\n    const dispatch = useDispatch() ;\n    const category = useSelector(state => state?.categories) ;\n    async function fetchUsers() {\n        const response = await fetch('https://fakestoreapi.com/users?limit=4') ;\n        const users = await response.json() ;\n        dispatch(addUsers(users))\n    }\n    async function fetchProducts() {\n        const response = await fetch('https://fakestoreapi.com/products?limit=4') ;\n        const users = await response.json() ;\n        dispatch(randomProducts(users))\n    }\n    useEffect(() => { \n            fetchUsers() ;\n            fetchProducts()\n        },[])\n    return (\n        <div className='home'>\n          {loggedIn ? \n          <> \n            <Navbar />\n            <Body /> \n          </> : <Redirect to='/sign-in' /> }\n        </div> \n    )\n} ;\n\nexport default Home;","C:\\Users\\toshiba\\new-project\\src\\components\\Category.js",["122"],"import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { useSelector } from 'react-redux' ;\r\nimport { Link } from 'react-router-dom' ;\r\nimport './Category.css' ;\r\n\r\nexport default function ControlledOpenSelect({ categoryName }) {\r\n  const categories = useSelector(state => state?.categories) ;\r\n  const [category, setCategory] = React.useState(categoryName ? categoryName : 'all');\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl >\r\n        \r\n        <Select\r\n          labelId=\"demo-controlled-open-select-label\"\r\n          id=\"demo-controlled-open-select\"\r\n          open={open}\r\n          onClose={handleClose}\r\n          onOpen={handleOpen}\r\n          value={category}\r\n          \r\n        >\r\n          <MenuItem value={'all'}><Link className='link' to='/'>All</Link></MenuItem>\r\n            {categories?.map((item, index) => (\r\n            <MenuItem key={index} value={item}>\r\n            <Link className='link' to={`/${item}`}>{item}</Link>\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      \r\n    </div>\r\n  );\r\n}","C:\\Users\\toshiba\\new-project\\src\\components\\Body.js",["123","124"],"import React from 'react'\r\nimport './Body.css' ;\r\nimport  {Swiper , SwiperSlide } from 'swiper/react' ;\r\nimport SwiperCore , { Navigation  , A11y , Autoplay , Keyboard } from 'swiper' ;\r\nimport 'swiper/swiper.scss' ;\r\nimport 'swiper/components/navigation/navigation.scss' ;\r\nimport { useSelector } from 'react-redux' ;\r\nimport Categories from './Categories' ;\r\nimport Users from './Users' ;\r\nimport ArrowForwardRoundedIcon from '@material-ui/icons/ArrowForwardRounded' ;\r\nimport Product from './Product' ;\r\nSwiperCore.use([Navigation , A11y , Autoplay , Keyboard]) ;\r\n\r\nfunction Body() {\r\n    const array = [1,2,3,4] ;\r\n    const categories = useSelector(state => state.categories) ;\r\n    const users = useSelector(state => state?.users)\r\n    const randomProducts = useSelector(state => state?.randomProducts) ;\r\n    const darkTheme = useSelector(state => state?.darkTheme) ;\r\n    console.log(darkTheme)\r\n    return (\r\n        <div className='body' style={{ backgroundColor: darkTheme ? '#101010' : '' , color: darkTheme ? 'white' : ''}}>\r\n            <div className='body-images'>\r\n                <Swiper \r\n                keyboard\r\n                autoplay = {{delay: 4000 }}\r\n                spaceBetween={0} \r\n                slidesPerView={1}\r\n                navigation\r\n                >\r\n                    <SwiperSlide><img src='https://images-na.ssl-images-amazon.com/images/G/01/AmazonExports/Fuji/2020/May/Hero/Fuji_TallHero_Home_v2_en_US_1x._CB429090084_.jpg' alt='amazon-sales'/></SwiperSlide>\r\n                    <SwiperSlide><img src='https://images-na.ssl-images-amazon.com/images/G/01/AmazonExports/Fuji/2020/May/Hero/Fuji_TallHero_Toys_en_US_1x._CB431858161_.jpg' alt='amazon-sales'/></SwiperSlide>\r\n                    <SwiperSlide><img src='https://images-na.ssl-images-amazon.com/images/G/01/AmazonExports/Events/2021/NYNY/Fuji_TallHero_NYNY_en_US_1x._CB412256579_.jpg' alt='amazon-sales'/></SwiperSlide>\r\n                </Swiper>\r\n                </div>\r\n                {/* div absolute 100% bottom : 0  */}\r\n                <div className={`body-fade ${darkTheme ? 'dark' : 'light'}` } > </div>\r\n                <div className='cont-category'>\r\n                    <h1 className='shop-category'>Shop by Category</h1>\r\n                    <ArrowForwardRoundedIcon className='arrow' fontSize='large'/>\r\n                </div>\r\n                <div className='body-categories' >\r\n                    { categories ? categories.map((item , index) => (    \r\n                        <Categories title={item} \r\n                            className={`category-item${index}`}\r\n                            key={index} \r\n                        />\r\n                    )) : array.map((item , index) => (\r\n                        <Categories className={`category-item${index}`} key={index} index={index} />\r\n                        \r\n                    ))}\r\n                </div>\r\n                    <div className='daily'>\r\n                        <h1 className='body-products'>Daily Deals</h1>\r\n                        <ArrowForwardRoundedIcon className='arrow' fontSize='large'/>\r\n                    </div>\r\n\r\n                    <div className='body-users'>\r\n                        {randomProducts ? randomProducts.map((item , index) => (    \r\n                            <Product info={item} \r\n                                className={`category-item${index}`}\r\n                                key={index} \r\n                            />\r\n                        )) : array.map((item , index) => (\r\n                            <Product className={`category-item${index}`} key={index} index={index}/>\r\n                            \r\n                        ))}\r\n                    </div>\r\n                \r\n                {/*<div className='body-users'>\r\n                    {users?.map((item , index) => (\r\n                        <Users info={item} key={index} className={`category-item${index}`} />\r\n                    ))}\r\n                </div>*/}\r\n            </div>\r\n        \r\n    )\r\n} ;\r\n\r\nexport default Body ;\r\n//https://images-na.ssl-images-amazon.com/images/G/01/AmazonExports/Fuji/2020/May/Hero/Fuji_TallHero_Home_v2_en_US_1x._CB429090084_.jpg\r\n//https://images-na.ssl-images-amazon.com/images/G/01/AmazonExports/Fuji/2020/May/Hero/Fuji_TallHero_Computers_1x._CB432469755_.jpg\r\n//https://images-na.ssl-images-amazon.com/images/G/01/AmazonExports/Events/2021/NYNY/Fuji_TallHero_NYNY_en_US_1x._CB412256579_.jpg","C:\\Users\\toshiba\\new-project\\src\\components\\Categories.js",["125","126"],"import React from 'react'\r\nimport './Categories.css' ;\r\nimport Card from '@material-ui/core/Card' ;\r\nimport { Link } from 'react-router-dom'\r\nimport Skeleton from '@material-ui/lab/Skeleton' ;\r\nimport { useSelector } from 'react-redux' ;\r\nfunction Categories({ title  , name}) {\r\n    const darkTheme = useSelector(state => state?.darkTheme) ;\r\n    let src = '' ;\r\n    if(title) {\r\n        switch (title) {\r\n            case 'electronics':\r\n                src='https://images-na.ssl-images-amazon.com/images/G/01/AmazonExports/Fuji/2020/May/Dashboard/Fuji_Dash_PC_1x._SY304_CB431800965_.jpg'\r\n                break;\r\n        \r\n            case 'jewelery' :\r\n                src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ4ry4XPSLFl8yzOVr34zDNvtq02t4WSuzqvw&usqp=CAU'\r\n                break;\r\n            case 'men clothing' : \r\n                src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQPRIaJnD_yXaFl1qM8YggAZrHF1hfCW2TaSw&usqp=CAU'\r\n                break \r\n            case 'women clothing' :\r\n                src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT3BpZBsLy_eCPTTPtsMBtEuT4m7y5d_T9L9Q&usqp=CAU'\r\n                break\r\n        }}\r\n    return (\r\n            <div className='categories' style={{backgroundColor : darkTheme ? '#282828' : '' , color: darkTheme ? 'white' : ''}}>\r\n                <h2>{title ? title : <Skeleton variant='text' />}</h2>\r\n                <div>{src ? <img src={src} alt={title} /> : <Skeleton variant='rect' height={320}/>}</div>\r\n                {title ? <Link to={`/${title}`} className='categories-link'>See more</Link> : <Skeleton variant='text'/>}\r\n            </div>\r\n    )\r\n} ;\r\n\r\nexport default Categories ;\r\n","C:\\Users\\toshiba\\new-project\\src\\App.js",["127"],"import React, { useEffect } from 'react'\r\nimport {BrowserRouter as Router , Route , Switch , Redirect } from 'react-router-dom' ;\r\nimport Home from './Home' ;\r\nimport { useDispatch , useSelector } from 'react-redux' ;\r\nimport CategoryProduct from './components/CategoryProduct' ;\r\nimport Sign from './components/Sign' ;\r\nimport { addCategories } from './actions' ;\r\nimport Cart from './components/Cart'\r\nimport './App.css'; \r\n\r\n\r\nfunction App() {\r\n    const loggedIn = useSelector(state => state.user.firstname)\r\n    const dispatch = useDispatch() ;\r\n    const categories = useSelector(state => state?.categories) ;\r\n    async function fetchCategories() {\r\n        const response = await fetch('https://fakestoreapi.com/products/categories') ;\r\n        const products = await response.json() ;\r\n        dispatch(addCategories(products))\r\n    }\r\n    useEffect(() => { \r\n        fetchCategories() ;\r\n    },[])\r\n    return (\r\n        <Router>\r\n            <Switch>  \r\n                    <Route exact path='/sign-in' component={Sign}/>\r\n                     { loggedIn ? '' : <Redirect from='/' to='/sign-in' />}\r\n                    <Route exact path='/' component={Home}/>\r\n                    <Route exact path='/cart' component={Cart}/>\r\n                    \r\n                    {categories?.map((item , index) => (\r\n                        <Route exact strict path={`/${item}`} key={index}>\r\n                            <CategoryProduct key={index} category={item} clsName='category-product'/>\r\n                        </Route>\r\n                    ))}\r\n                    \r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App\r\n","C:\\Users\\toshiba\\new-project\\src\\components\\CategoryProduct.js",["128","129","130","131","132","133","134","135","136","137","138"],"C:\\Users\\toshiba\\new-project\\src\\components\\Users.js",["139","140"],"import React from 'react'\r\nimport './Users.css' ;\r\nimport Avatar from '@material-ui/core/Avatar' ;\r\nimport Email from '@material-ui/icons/Email' ;\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn' ;\r\nimport amber from '@material-ui/core/colors/amber' ;\r\n\r\nfunction Users({ info , index }) {\r\n    \r\n    const usersImages = [\r\n        'https://www.gravatar.com/avatar/1b8fabaa8d66250a7049bdb9ecf44397?s=250&d=mm&r=x' ,\r\n        'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSWVVBhM9gHkGMTkF9JyPFxYQqFXQqMlU86Gg&usqp=CAU' ,\r\n        ''\r\n    ]\r\n    return (\r\n        <div className='users'>\r\n        <Avatar className='avatar' fontSize='large' />\r\n        <h2>{`${info.name.firstname} ${info.name.lastname}`}</h2>\r\n        <div className='users-address'>\r\n            <LocationOnIcon />\r\n            <p>{`${info.address.city}, ${info.address.street}`}</p> \r\n        </div>\r\n        <a href={`tel:${info.phone}`}>{info.phone}</a>\r\n        <div className='users-email'>\r\n            <button>Follow</button>\r\n            <Email fontSize='large' color='secondary'/>\r\n        </div>\r\n        </div>\r\n    )\r\n} ;\r\n\r\nexport default Users ;\r\n","C:\\Users\\toshiba\\new-project\\src\\components\\Product.js",["141","142"],"import React from 'react'\r\nimport './Product.css' ;\r\nimport StarIcon from '@material-ui/icons/StarRateRounded' ;\r\nimport Card from '@material-ui/core/Card' ;\r\nimport { Link } from 'react-router-dom'\r\nimport Skeleton from '@material-ui/lab/Skeleton' ;\r\nimport amber from '@material-ui/core/colors/amber' ;\r\nimport Button from '@material-ui/core/Button' ;\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart' ;\r\nimport { useSelector } from 'react-redux' ;\r\n\r\nfunction Product({ info , index }) {\r\n    const darkTheme = useSelector(state => state?.darkTheme) ;\r\n    const yellow = amber[700]\r\n    let array = [1 , 2 ,3 ,4 ] ;   \r\n    let newArray ;\r\n    const randomNumber = (min , max ) => {\r\n        let rating = Math.floor(Math.random() * (max - min + 1) ) + min ;\r\n        return rating ;\r\n    }\r\n    if (info) {\r\n        let num = randomNumber(2 , 5)\r\n        newArray = array.slice(0 , num) ;\r\n    }\r\n    \r\n    return (\r\n        <div className={`product ${darkTheme ? 'black' : ''}`}  style={{backgroundColor : darkTheme ? '#282828' : '' }}>\r\n            <div>{info ? <img src={info.image} alt={info.title} /> : <Skeleton variant='rect' height={320}/>}</div>\r\n            {info ? <p>{info.title}</p> : <Skeleton variant='text' />}\r\n            {info ? <span>{`$ ${info.price}`}</span> : <Skeleton variant='text'/>}\r\n            <div className='product-rating'>\r\n                {info ?  newArray.map((item , index) => (\r\n                    <StarIcon style={{ color : amber[800]}} />\r\n                )) : <Skeleton variant='text' /> }\r\n            </div>\r\n            <div className='product-bottom'>\r\n                { info ? <Link to={`/${info?.category}`} className='product-link'>Learn More</Link> : <Skeleton variant='text'/>}\r\n                {info ? <Link className='button-link' to={`/${info.category}`} ><Button\r\n                startIcon={<AddShoppingCartIcon />}\r\n                size='medium'\r\n                variant='contained' \r\n                style={{ backgroundColor : amber[800] , fontFamily: 'Open Sans, sans-serif'}}\r\n                >\r\n                Add To Cart </Button></Link> : <Skeleton variant='rect'/>}\r\n            </div>\r\n        </div>\r\n    )\r\n} ;\r\n\r\nexport default Product ;\r\n","C:\\Users\\toshiba\\new-project\\src\\components\\Sign.js",["143","144","145"],"C:\\Users\\toshiba\\new-project\\src\\components\\Cart.js",["146"],"import React, { useEffect , useState } from 'react'\r\nimport './Cart.css' ;\r\nimport { useSelector } from 'react-redux' ;\r\nimport { Link } from 'react-router-dom' ;\r\nimport Navbar from './Navbar' ;\r\nimport Products from './Products' ;\r\n\r\nfunction Cart() {\r\n    const darkTheme = useSelector(state => state.darkTheme)\r\n    const cart = useSelector(state => state.cart) ;\r\n    const [clicked , setClicked ] = useState(false)\r\n    const [payAccount , setPayAccount] = useState(0) ;\r\n    useEffect(() => {\r\n        console.log('useEffect =>> ')\r\n        if(cart.length) {\r\n            let pay = 0 ;\r\n            for(let i=0 ; i < cart.length ; i++) {\r\n            pay += cart[i].price\r\n            console.log('pay =>> ',pay)\r\n        }\r\n        setPayAccount(pay)\r\n        } else {\r\n            setPayAccount(0)\r\n        }\r\n    } ,[cart.length])\r\n    const render = () => {\r\n        setClicked(!clicked)\r\n    }\r\n    return (\r\n        <div >\r\n        <Navbar />\r\n        <div className={`cart ${cart.length ? 'reverse' : '' }`} style={{ backgroundColor: darkTheme ? '#101010' : '' , color: darkTheme ? 'white' : ''}} >\r\n        { !cart.length ?\r\n            <div className='cart-left' style={{ backgroundColor: darkTheme ? '#282828' : '' , color: darkTheme ? 'white' : ''}}>\r\n                <img src='https://www.x1.com/wp-content/uploads/2018/09/Shopping-cart-icon.png' alt='cart' />\r\n                <div className='empty'>\r\n                    <h1>Your Amazon Cart is empty</h1>\r\n                    <Link className='cart-link' to='/'>Shop today's deals </Link>\r\n                </div>\r\n            </div> \r\n            : <div className='category-product'>\r\n                {cart.map((item , index) => (\r\n                <Products item={item} key={index} atCart render={render} />\r\n            ))  }\r\n            </div> }\r\n                <div className='cart-right' style={{ backgroundColor: darkTheme ? '#282828' : '' , color: darkTheme ? 'white' : ''}}>\r\n                    <h1>Subtotal</h1>\r\n                    <div className='cart-right-total'>\r\n                        <p>Number of items : {cart.length ? cart.length : <span>0</span> }</p>\r\n                        <p>Pay Account : {cart.length ? <span>${payAccount}</span> : <span>$0</span> }</p>\r\n                    </div>\r\n                </div>\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart ;\r\n","C:\\Users\\toshiba\\new-project\\src\\components\\Products.js",["147","148","149","150"],"import React, { useEffect , useState } from 'react'\r\nimport './Products.css' ;\r\nimport Skeleton from '@material-ui/lab/Skeleton' ; \r\nimport StarIcon from '@material-ui/icons/StarRateRounded' ;\r\nimport Button from '@material-ui/core/Button' ;\r\nimport amber from '@material-ui/core/colors/amber' ;\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart' ;\r\nimport { useDispatch , useSelector } from 'react-redux' ;\r\nimport { addProduct , removeProduct  } from '../actions' ;\r\nimport { Link } from 'react-router-dom' ;\r\nimport Fade from 'react-reveal/Fade'\r\nimport RemoveShoppingCartIcon from \"@material-ui/icons/RemoveShoppingCart\" ;\r\n\r\nfunction Products({item , index , atCart , render}) {\r\n    const darkTheme = useSelector(state=> state.darkTheme) ;\r\n    const loggedIn = useSelector(state => state?.user?.firstname)\r\n    const cart = useSelector(state => state?.cart) \r\n    const [rating , setRating] = useState() ;\r\n    const [ stored , setStored ] = useState(false) \r\n    const dispatch = useDispatch() ;\r\n    let array = [1 , 2 ,3 ,4 ] ;   \r\n    let newArray ;\r\n    const randomNumber = (min , max ) => {return Math.floor(Math.random() * (max - min + 1) ) + min }\r\n    useEffect(() => {\r\n        if (item) {\r\n        let num = randomNumber(2 , 5)\r\n        newArray = array.slice(0 , num) ;\r\n        setRating(newArray)\r\n        }\r\n    },[])\r\n    useEffect(() => {\r\n        if(stored) {\r\n            const tomeoutId = setTimeout(() => {\r\n                setStored(false)\r\n            }, 1500);\r\n        }\r\n    },[stored])\r\n    console.log(rating )\r\n\r\n    const addToCart = () => {\r\n        console.log('item =>>' , item)\r\n        dispatch(addProduct(item))\r\n        setStored(true)\r\n    }\r\n    const removeFromCart = () => {\r\n        dispatch(removeProduct(item))\r\n        console.log('removed')\r\n        setStored(true)\r\n        render()\r\n    }\r\n    console.log('cart =>>' , cart)\r\n    return (\r\n        <div className={`single-product ${darkTheme ? 'black' : ''} ${atCart ? 'cart-left' : 'withmargin'}`} style={{backgroundColor : darkTheme ? '#282828' : ''}}>\r\n            { item ? <img src={item.image} alt={item.title} /> : <Skeleton className='skeleton1' variant='rect' height={350} width={440} />}\r\n            <div className='product-info' >\r\n                 <h1>{ item ? item.title : <Skeleton variant='text' height={120} /> }</h1> \r\n                {item ? <strong><span>price :</span> ${item.price}</strong> : <Skeleton variant='text' height={20} width={120} />}\r\n                { item ? \r\n                <div>\r\n                    {rating?.map((item , index) => (\r\n                    <StarIcon style={{color: amber[900]}}/>\r\n                    ))}\r\n                </div>: <Skeleton variant='text' height={20} width={120} /> }\r\n                {item ? <h2>About this item</h2> : <Skeleton variant='text' height={20} width={120} /> }\r\n                {item ? <p>{item.description}</p> : <Skeleton  variant='text' height={100} />}\r\n\r\n               {item ?  <Button\r\n                onClick={ !atCart ?  () => addToCart()  : () => removeFromCart() }\r\n                startIcon={<AddShoppingCartIcon />}\r\n                size='medium'\r\n                variant='contained' \r\n                style={{ backgroundColor : amber[800] ,marginTop: '20px' , maxWidth :'300px', fontFamily: 'Open Sans, sans-serif'}}\r\n                >\r\n                { !atCart ? 'Add To Cart' : 'Remove From Cart'} </Button> : <Skeleton className='skeleton2'  variant='rect' height={40} width={200} />}\r\n                <Fade when={stored}>\r\n                    <h2>Item {!atCart ? 'added' : 'removed'} {!atCart ? <AddShoppingCartIcon /> : <RemoveShoppingCartIcon /> }</h2>\r\n                </Fade>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Products\r\n","C:\\Users\\toshiba\\new-project\\src\\CountriesProject\\App.js",["151","152"],"import React from 'react'\r\nimport {BrowserRouter as Router , Route , Switch , Redirect } from 'react-router-dom' ;\r\nimport Home from './components/Home' ;\r\nimport SingleCountry from './components/SingleCountry' ;\r\nimport './App.css' ;\r\nimport { Provider } from 'react-redux'\r\nimport { createStore } from 'redux' ;\r\nimport { reducer } from './reducer' ;\r\nimport { useSelector } from 'react-redux' ;\r\n//import 'bootstrap/dist/css/bootstrap.min.css';\r\nconst store = createStore(reducer) \r\n\r\nfunction App() {\r\n    return ( \r\n        <Provider store={store} > \r\n            <div className='app'  >\r\n                <Router>\r\n                    <Switch>\r\n                        <Route exact path='/' component={Home} />\r\n                        <Route exact path='/countries/:countryId'>\r\n                            <SingleCountry />\r\n                        </Route>\r\n                    </Switch>\r\n                </Router>\r\n            </div>\r\n        </Provider>\r\n        \r\n    )\r\n} ;\r\n\r\nexport default App ;\r\n\r\n",["153","154"],"C:\\Users\\toshiba\\new-project\\src\\CountriesProject\\components\\Home.js",["155","156","157","158","159","160","161","162","163"],"import React, { useState , useEffect , useRef } from 'react'\r\nimport Header from './Header' ;\r\nimport './Home.css' ;\r\nimport SearchIcon from '@material-ui/icons/Search' ;\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { useSelector } from 'react-redux' ;\r\nimport IconButton from '@material-ui/core/IconButton' ;\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport Country from './Country' ;\r\nimport { usefetch , fetchCorrespondingData , fetchHomeData} from '../useFetch.js' ;\r\nimport Spinner from 'react-bootstrap/Spinner' ;\r\nimport Fade from 'react-reveal/Fade' ;\r\n\r\nfunction Home() {\r\n    const [selectValue , setSelectValue ] = useState('') ;\r\n    const [ input , setInput ] = useState('') ;\r\n    const [data , setData ] = useState([]) ;\r\n    const darkTheme = useSelector(state => state.darkTheme )\r\n    const [open, setOpen] = useState(false);\r\n    const ref = useRef(null) ;\r\n    const [ search , setSearch ] = useState(false) ;\r\n    const [ loading , setLoading ] = useState(false) ;\r\n    const [error , setError] = useState(false) ;\r\n    const [ tempData , setTemData ] = useState([{}]) ;\r\n    const handleSubmit = e => {\r\n        e.preventDefault() ;\r\n    }\r\n    const handleChange = e => {\r\n        setInput(e.target.value) \r\n    }\r\n    const handleData = (data) => {\r\n        setData(data) ;\r\n        setError(false)\r\n    }\r\n    const handleError = () => {\r\n        setError(true) ;\r\n        setData(null)\r\n    }\r\n    const load = () => {\r\n        setLoading(true)\r\n    }\r\n    const finishedLoad = () => {\r\n        setLoading(false)\r\n    }\r\n    console.log(data) ;\r\n    useEffect(() => {\r\n        console.log(loading , 'p')\r\n        if ( input === '' ) {\r\n            if ( !selectValue ) {\r\n                console.log('fetch Home data ...')\r\n                fetchHomeData( handleData ) ;\r\n                setSearch(false)\r\n            }\r\n            console.log('load before' , loading )\r\n            selectValue && usefetch( 'region' , selectValue , handleData , load , finishedLoad) && setLoading(true) ;\r\n            console.log('loading after' , loading)\r\n            selectValue && console.log('fetch region data ...')\r\n            setSearch(false)\r\n        } else {\r\n            if( !selectValue ) {\r\n                console.log(' !selecValue', selectValue)\r\n                \r\n                usefetch('name' , input , handleData ,handleError, load , finishedLoad) \r\n                \r\n                setSearch(false)\r\n            } else {\r\n                console.log('doing the last one')\r\n                usefetch('name' , input , handleData ,handleError, load , finishedLoad) \r\n                let tmpData = data ? data.filter((item) => {\r\n                    return item.region === selectValue\r\n                }) : []\r\n                setTemData(tmpData) ;\r\n                console.log('tmpdata =>>', tmpData)\r\n                setSearch(true)\r\n            }\r\n        }\r\n    }, [ input , selectValue ]) \r\n\r\n    useEffect(() => {\r\n        setLoading(false) ;\r\n        console.log('load finish' , loading )\r\n        error && setLoading(false)\r\n    }, [ data ])\r\n\r\nconsole.log('porgressww' , loading)\r\nconsole.log(search)\r\n   const areas = [ 'Africa' , 'Americas' , 'Asia' , 'Europe' , 'Oceania' ] ;\r\n    return (\r\n        <div style={{backgroundColor: darkTheme ? '#202D36' :'#F5F5F5' , minHeight: `${window.innerHeight}px` }}>\r\n            <Header />\r\n            <div className='home-input'> \r\n                <form onSubmit={(e) => handleSubmit(e)}>\r\n                    <div className='form-input' style={{ boxShadow: darkTheme && '0px 0px 5px black' , color: darkTheme && 'white' , backgroundColor: darkTheme && '#2B3743' }}>\r\n                        <IconButton onClick={(e) => handleSubmit(e)}><SearchIcon style={{backgroundColor: darkTheme && '#2B3743' , color: darkTheme && 'white'}} /></IconButton>\r\n                        <input type='text' onChange={(e) => handleChange(e)} value={input} placeholder='Search for a country...' className={darkTheme && 'input-dark'} style={{backgroundColor : darkTheme && '#2B3743' , color: darkTheme && 'white'}} /> \r\n                        { loading ? <Spinner animation='border' /> : null }\r\n                    </div>\r\n                </form>\r\n\r\n                <Dropdown>\r\n                    <Dropdown.Toggle style={{backgroundColor : darkTheme && '#2B3743' , color: darkTheme && '#CBD3DE' ,  boxShadow: darkTheme && '0px 0px 5px black'}} id=\"dropdown-basic\">\r\n                            {selectValue ? selectValue : 'Filter by Region'}\r\n                    </Dropdown.Toggle>\r\n\r\n                     <Dropdown.Menu style={{backgroundColor : darkTheme && '#2B3743' , color: darkTheme && '#CBD3DE' ,  boxShadow: darkTheme && 'none'}}>\r\n                        <Dropdown.Item onClick={() => setSelectValue('')} >All</Dropdown.Item>\r\n                        { areas.map((item , index) => (\r\n                            <Dropdown.Item key={index} onClick={() => setSelectValue(areas[index])} >{item}</Dropdown.Item>\r\n                        ))}\r\n                    </Dropdown.Menu>\r\n                    \r\n                </Dropdown>\r\n            </div>\r\n            \r\n            <div className='home-body' >\r\n                { data && !error ? data?.map((item , index) => \r\n                     search ? (\r\n                        item.region ===selectValue ? <Country key={index} country={item} /> : null\r\n                    ): <Country key={index}  country={item} />\r\n                ) : null }\r\n                \r\n                \r\n            </div>\r\n            <div className='no-result' style={{color: darkTheme ? 'white' : 'black'}}>\r\n                { !tempData.length && selectValue ? <Fade appear when={!tempData.length && selectValue} right><p >No results found for \" <strong>{input}</strong> \" in <strong>{selectValue}</strong></p></Fade> : null }\r\n                { error && !selectValue ? <Fade appear when={error && !selectValue} right><p>No results found for \" <strong>{input}</strong> \" </p></Fade> : null }\r\n            </div>\r\n        </div>\r\n    )\r\n} ;\r\n\r\nexport default Home ;\r\n","C:\\Users\\toshiba\\new-project\\src\\CountriesProject\\components\\Header.js",[],"C:\\Users\\toshiba\\new-project\\src\\CountriesProject\\actions.js",[],"C:\\Users\\toshiba\\new-project\\src\\CountriesProject\\components\\Country.js",[],"C:\\Users\\toshiba\\new-project\\src\\CountriesProject\\components\\SingleCountry.js",["164"],"import React, { useState , useEffect } from 'react'\r\nimport './SingleCountry.css' ;\r\nimport Header from './Header' ;\r\nimport { useParams , useHistory , Link  } from 'react-router-dom' ;\r\nimport { useSelector } from 'react-redux' ;\r\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt' ;\r\nimport { fetchCountry } from '../useFetch.js' ;\r\nimport Borders from './Borders'\r\nimport Fade from 'react-reveal/Fade' ;\r\nimport Map from './Map' ;\r\nimport { Helmet } from 'react-helmet' ;\r\n\r\nfunction SingleCountry() {\r\n    const darkTheme = useSelector(state => state.darkTheme ) ;\r\n    const [ data , setData ] = useState()\r\n    const [ error , setError ] = useState(false) ;\r\n    let { countryId } = useParams() ;\r\n    let history = useHistory() ;\r\n    console.log('history =>>' , history)\r\n    console.log(data)\r\n    const back = () => {\r\n        history.goBack()\r\n    }\r\n    const handleData = (country) => {\r\n        setData(country)\r\n        setError(false)\r\n    }\r\n    const handleError = () => {\r\n        setError(true)\r\n    }\r\n    useEffect(() => {\r\n        fetchCountry( countryId , handleData , handleError )\r\n    }, [ countryId ])\r\n    console.log(data )\r\n    console.log('data borders=>>', data?.borders)\r\n    return (\r\n        <div style={{backgroundColor: darkTheme ? '#202D36' :'#F5F5F5' ,  minHeight: `${window.innerHeight}px`}}>\r\n            <Helmet>\r\n                <title>Discover Countries | Countries </title>\r\n            </Helmet>\r\n            <Header style={{position: 'relative'}} />\r\n             <div className='single-country' style={{boxShadow: darkTheme && 'none' , color: darkTheme && 'white' , backgroundColor: darkTheme && '#202D36' }} >\r\n                <button style={{background: darkTheme ? '#2B3743' : 'white' , boxShadow: darkTheme && '0px 0px 5px black' }} onClick={() => back()}>\r\n                    <ArrowRightAltIcon className='go-back' />\r\n                    <span>Back</span>\r\n                </button>\r\n            { !error ?\r\n                <div className='main-content' >\r\n                    <Fade><div className='left-content'><img src={data?.flag} alt={data?.name} /></div></Fade>\r\n                    <Fade><div className='right-content'>\r\n                        <h1>{data?.name}</h1>\r\n                        <div className='single-country-info' >\r\n                            <div className='country-info-left'>\r\n                                <ul>\r\n                                    <li><strong>Native Name: </strong>{data?.nativeName}</li>\r\n                                    <li><strong>Population: </strong>{data?.population}</li>\r\n                                    <li><strong>Region: </strong>{data?.region}</li>\r\n                                    <li><strong>Sub Region: </strong>{data?.subregion}</li>\r\n                                    <li><strong>Capital: </strong>{data?.capital}</li>\r\n                                </ul>\r\n                            </div>\r\n                            <div className='country-info-right'>\r\n                                <ul>\r\n                                    <li><strong>Top Level Domain: </strong>{data?.topLevelDomain}</li>\r\n                                    <li><strong>Currencies: </strong>{data?.currencies.map((item , index) => (\r\n                                        <span key={index}> {item.name}{ index + 1 === data.currencies.length ? '.' : ',' }</span>\r\n                                    ))}</li>\r\n                                    <li><strong>Languages: </strong>{data?.languages.map((item , index) => (\r\n                                        <span key={index}> {item.name}{ index + 1 ===data.languages.length ? '.' : ','}</span>\r\n                                    ))}</li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        {data?.borders.length ? <div className='bottom-info'>\r\n                            <strong>Border Countries: </strong>\r\n                            {data && <Borders countryBorders={data?.borders} />}\r\n                            {console.log('data borders =>>' , data?.borders)}\r\n                        </div>: null }\r\n                    </div> </Fade>\r\n                </div> : \r\n                    <Fade appear when={error} right>\r\n                        <div className='no-result-cont' style={{color: darkTheme ? 'white' : 'black'}}>\r\n                            <p>No results found for \" <strong>{countryId}</strong> \"  <button className='no-result-button' onClick={() => back()}>Go back ?</button></p>       \r\n                        </div>\r\n                    </Fade> }\r\n            </div> \r\n            { !error ? \r\n            <div className='map-country-container'>\r\n                <Map countryPosition={data?.latlng} name={data?.name} />\r\n            </div>\r\n            \r\n             : null }\r\n        </div>\r\n    )\r\n} ;\r\n\r\nexport default SingleCountry ;","C:\\Users\\toshiba\\new-project\\src\\CountriesProject\\components\\Borders.js",[],"C:\\Users\\toshiba\\new-project\\src\\CountriesProject\\components\\Map.js",[],"C:\\Users\\toshiba\\new-project\\src\\CountriesProject\\useFetch.js",[],"C:\\Users\\toshiba\\new-project\\src\\CountriesProject\\reducer.js",["165"],"const initialState = { \r\n    darkTheme : false\r\n}\r\n\r\nexport function reducer(state=initialState , action) {\r\n    switch(action.type) {\r\n        case 'TOGGLE_THEME' : \r\n        return {\r\n            darkTheme: !state.darkTheme\r\n        }\r\n        default : \r\n            return state ;\r\n    }\r\n    console.log(state.darkTheme)\r\n}\r\n",{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":3,"column":10,"nodeType":"172","messageId":"173","endLine":3,"endColumn":23},{"ruleId":"170","severity":1,"message":"174","line":13,"column":11,"nodeType":"172","messageId":"173","endLine":13,"endColumn":19},{"ruleId":"175","severity":1,"message":"176","line":27,"column":11,"nodeType":"177","endLine":27,"endColumn":13,"suggestions":"178"},{"ruleId":"170","severity":1,"message":"179","line":11,"column":20,"nodeType":"172","messageId":"173","endLine":11,"endColumn":31},{"ruleId":"170","severity":1,"message":"180","line":9,"column":8,"nodeType":"172","messageId":"173","endLine":9,"endColumn":13},{"ruleId":"170","severity":1,"message":"181","line":17,"column":11,"nodeType":"172","messageId":"173","endLine":17,"endColumn":16},{"ruleId":"170","severity":1,"message":"182","line":3,"column":8,"nodeType":"172","messageId":"173","endLine":3,"endColumn":12},{"ruleId":"183","severity":1,"message":"184","line":11,"column":9,"nodeType":"185","messageId":"186","endLine":25,"endColumn":10},{"ruleId":"175","severity":1,"message":"187","line":23,"column":7,"nodeType":"177","endLine":23,"endColumn":9,"suggestions":"188"},{"ruleId":"170","severity":1,"message":"189","line":4,"column":8,"nodeType":"172","messageId":"173","endLine":4,"endColumn":16},{"ruleId":"170","severity":1,"message":"190","line":5,"column":8,"nodeType":"172","messageId":"173","endLine":5,"endColumn":16},{"ruleId":"170","severity":1,"message":"191","line":6,"column":8,"nodeType":"172","messageId":"173","endLine":6,"endColumn":14},{"ruleId":"170","severity":1,"message":"192","line":8,"column":8,"nodeType":"172","messageId":"173","endLine":8,"endColumn":27},{"ruleId":"170","severity":1,"message":"193","line":13,"column":11,"nodeType":"172","messageId":"173","endLine":13,"endColumn":17},{"ruleId":"170","severity":1,"message":"194","line":17,"column":13,"nodeType":"172","messageId":"173","endLine":17,"endColumn":25},{"ruleId":"170","severity":1,"message":"195","line":17,"column":28,"nodeType":"172","messageId":"173","endLine":17,"endColumn":43},{"ruleId":"175","severity":1,"message":"196","line":27,"column":8,"nodeType":"177","endLine":27,"endColumn":10,"suggestions":"197"},{"ruleId":"170","severity":1,"message":"198","line":41,"column":17,"nodeType":"172","messageId":"173","endLine":41,"endColumn":21},{"ruleId":"199","severity":1,"message":"200","line":42,"column":52,"nodeType":"201","messageId":"202","endLine":42,"endColumn":54},{"ruleId":"175","severity":1,"message":"203","line":50,"column":12,"nodeType":"177","endLine":50,"endColumn":19,"suggestions":"204"},{"ruleId":"170","severity":1,"message":"205","line":6,"column":8,"nodeType":"172","messageId":"173","endLine":6,"endColumn":13},{"ruleId":"170","severity":1,"message":"206","line":10,"column":11,"nodeType":"172","messageId":"173","endLine":10,"endColumn":22},{"ruleId":"170","severity":1,"message":"182","line":4,"column":8,"nodeType":"172","messageId":"173","endLine":4,"endColumn":12},{"ruleId":"170","severity":1,"message":"193","line":14,"column":11,"nodeType":"172","messageId":"173","endLine":14,"endColumn":17},{"ruleId":"170","severity":1,"message":"207","line":7,"column":10,"nodeType":"172","messageId":"173","endLine":7,"endColumn":14},{"ruleId":"170","severity":1,"message":"208","line":13,"column":11,"nodeType":"172","messageId":"173","endLine":13,"endColumn":19},{"ruleId":"170","severity":1,"message":"193","line":14,"column":11,"nodeType":"172","messageId":"173","endLine":14,"endColumn":17},{"ruleId":"175","severity":1,"message":"209","line":25,"column":8,"nodeType":"177","endLine":25,"endColumn":21,"suggestions":"210"},{"ruleId":"170","severity":1,"message":"207","line":10,"column":10,"nodeType":"172","messageId":"173","endLine":10,"endColumn":14},{"ruleId":"170","severity":1,"message":"211","line":16,"column":11,"nodeType":"172","messageId":"173","endLine":16,"endColumn":19},{"ruleId":"175","severity":1,"message":"212","line":27,"column":20,"nodeType":"213","endLine":27,"endColumn":40},{"ruleId":"170","severity":1,"message":"214","line":33,"column":19,"nodeType":"172","messageId":"173","endLine":33,"endColumn":28},{"ruleId":"170","severity":1,"message":"215","line":2,"column":52,"nodeType":"172","messageId":"173","endLine":2,"endColumn":60},{"ruleId":"170","severity":1,"message":"216","line":9,"column":10,"nodeType":"172","messageId":"173","endLine":9,"endColumn":21},{"ruleId":"166","replacedBy":"217"},{"ruleId":"168","replacedBy":"218"},{"ruleId":"170","severity":1,"message":"219","line":5,"column":8,"nodeType":"172","messageId":"173","endLine":5,"endColumn":16},{"ruleId":"170","severity":1,"message":"220","line":6,"column":8,"nodeType":"172","messageId":"173","endLine":6,"endColumn":19},{"ruleId":"170","severity":1,"message":"221","line":7,"column":8,"nodeType":"172","messageId":"173","endLine":7,"endColumn":14},{"ruleId":"170","severity":1,"message":"222","line":12,"column":21,"nodeType":"172","messageId":"173","endLine":12,"endColumn":43},{"ruleId":"170","severity":1,"message":"223","line":21,"column":12,"nodeType":"172","messageId":"173","endLine":21,"endColumn":16},{"ruleId":"170","severity":1,"message":"224","line":21,"column":18,"nodeType":"172","messageId":"173","endLine":21,"endColumn":25},{"ruleId":"170","severity":1,"message":"225","line":22,"column":11,"nodeType":"172","messageId":"173","endLine":22,"endColumn":14},{"ruleId":"175","severity":1,"message":"226","line":79,"column":8,"nodeType":"177","endLine":79,"endColumn":31,"suggestions":"227"},{"ruleId":"175","severity":1,"message":"228","line":85,"column":8,"nodeType":"177","endLine":85,"endColumn":16,"suggestions":"229"},{"ruleId":"170","severity":1,"message":"207","line":4,"column":35,"nodeType":"172","messageId":"173","endLine":4,"endColumn":39},{"ruleId":"230","severity":1,"message":"231","line":14,"column":5,"nodeType":"232","messageId":"233","endLine":14,"endColumn":33},"no-native-reassign",["234"],"no-negated-in-lhs",["235"],"no-unused-vars","'addCategories' is defined but never used.","Identifier","unusedVar","'category' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchProducts' and 'fetchUsers'. Either include them or remove the dependency array.","ArrayExpression",["236"],"'setCategory' is assigned a value but never used.","'Users' is defined but never used.","'users' is assigned a value but never used.","'Card' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'fetchCategories'. Either include it or remove the dependency array.",["237"],"'Skeleton' is defined but never used.","'StarIcon' is defined but never used.","'Button' is defined but never used.","'AddShoppingCartIcon' is defined but never used.","'yellow' is assigned a value but never used.","'searchFailed' is assigned a value but never used.","'setSearchFailed' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchCategoryProducts'. Either include it or remove the dependency array.",["238"],"'numb' is defined but never used.","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'array', 'categoryProduct', and 'changed'. Either include them or remove the dependency array.",["239"],"'amber' is defined but never used.","'usersImages' is assigned a value but never used.","'Link' is defined but never used.","'redirect' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'cart'. Either include it or remove the dependency array.",["240"],"'loggedIn' is assigned a value but never used.","Assignments to the 'newArray' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'tomeoutId' is assigned a value but never used.","'Redirect' is defined but never used.","'useSelector' is defined but never used.",["234"],["235"],"'MenuItem' is defined but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'fetchCorrespondingData' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'ref' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data' and 'loading'. Either include them or remove the dependency array.",["241"],"React Hook useEffect has missing dependencies: 'error' and 'loading'. Either include them or remove the dependency array.",["242"],"no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","no-global-assign","no-unsafe-negation",{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},"Update the dependencies array to be: [fetchProducts, fetchUsers]",{"range":"257","text":"258"},"Update the dependencies array to be: [fetchCategories]",{"range":"259","text":"260"},"Update the dependencies array to be: [fetchCategoryProducts]",{"range":"261","text":"262"},"Update the dependencies array to be: [array, categoryProduct, changed, input]",{"range":"263","text":"264"},"Update the dependencies array to be: [cart, cart.length]",{"range":"265","text":"266"},"Update the dependencies array to be: [data, input, loading, selectValue]",{"range":"267","text":"268"},"Update the dependencies array to be: [data, error, loading]",{"range":"269","text":"270"},[1034,1036],"[fetchProducts, fetchUsers]",[904,906],"[fetchCategories]",[1221,1223],"[fetchCategoryProducts]",[1981,1988],"[array, categoryProduct, changed, input]",[826,839],"[cart, cart.length]",[3021,3044],"[data, input, loading, selectValue]",[3192,3200],"[data, error, loading]"]