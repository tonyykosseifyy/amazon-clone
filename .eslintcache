[{"C:\\Users\\toshiba\\new-project\\src\\index.js":"1","C:\\Users\\toshiba\\new-project\\src\\reducer.js":"2","C:\\Users\\toshiba\\new-project\\src\\actions.js":"3","C:\\Users\\toshiba\\new-project\\src\\components\\Navbar.js":"4","C:\\Users\\toshiba\\new-project\\src\\Home.js":"5","C:\\Users\\toshiba\\new-project\\src\\components\\Category.js":"6","C:\\Users\\toshiba\\new-project\\src\\components\\Body.js":"7","C:\\Users\\toshiba\\new-project\\src\\components\\Categories.js":"8","C:\\Users\\toshiba\\new-project\\src\\App.js":"9","C:\\Users\\toshiba\\new-project\\src\\components\\CategoryProduct.js":"10","C:\\Users\\toshiba\\new-project\\src\\components\\Product.js":"11","C:\\Users\\toshiba\\new-project\\src\\components\\Sign.js":"12","C:\\Users\\toshiba\\new-project\\src\\components\\Cart.js":"13","C:\\Users\\toshiba\\new-project\\src\\components\\Products.js":"14","C:\\Users\\toshiba\\new-project\\src\\components\\StyledAuth.js":"15","C:\\Users\\toshiba\\new-project\\src\\components\\getCountry.js":"16","C:\\Users\\toshiba\\new-project\\src\\components\\Menu.js":"17"},{"size":492,"mtime":1612518059621,"results":"18","hashOfConfig":"19"},{"size":1934,"mtime":1615830842110,"results":"20","hashOfConfig":"19"},{"size":904,"mtime":1615830811471,"results":"21","hashOfConfig":"19"},{"size":6419,"mtime":1619454209018,"results":"22","hashOfConfig":"19"},{"size":1151,"mtime":1615907131405,"results":"23","hashOfConfig":"19"},{"size":1386,"mtime":1615553234753,"results":"24","hashOfConfig":"19"},{"size":3699,"mtime":1615907055641,"results":"25","hashOfConfig":"19"},{"size":1698,"mtime":1619245946226,"results":"26","hashOfConfig":"19"},{"size":1679,"mtime":1615908016739,"results":"27","hashOfConfig":"19"},{"size":3155,"mtime":1615907475365,"results":"28","hashOfConfig":"19"},{"size":2154,"mtime":1615904371073,"results":"29","hashOfConfig":"19"},{"size":2848,"mtime":1615903306475,"results":"30","hashOfConfig":"19"},{"size":3192,"mtime":1615912245536,"results":"31","hashOfConfig":"19"},{"size":4040,"mtime":1615906761401,"results":"32","hashOfConfig":"19"},{"size":1950,"mtime":1616343581360,"results":"33","hashOfConfig":"19"},{"size":407,"mtime":1615912341655,"results":"34","hashOfConfig":"19"},{"size":1020,"mtime":1619429845009,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1vy4qao",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"38"},"C:\\Users\\toshiba\\new-project\\src\\index.js",[],["79","80"],"C:\\Users\\toshiba\\new-project\\src\\reducer.js",[],"C:\\Users\\toshiba\\new-project\\src\\actions.js",[],"C:\\Users\\toshiba\\new-project\\src\\components\\Navbar.js",[],"C:\\Users\\toshiba\\new-project\\src\\Home.js",["81"],"import React,{ useEffect } from 'react' ;\nimport { useDispatch , useSelector } from 'react-redux' ;\nimport './Home.css';\nimport Navbar from './components/Navbar' ;\nimport Body from './components/Body' ;\nimport { addUsers , randomProducts } from './actions' ;\nimport { Redirect } from 'react-router-dom' ;\n\nfunction Home() {\n    const loggedIn = useSelector(state => state.user.displayName)\n    const dispatch = useDispatch() ;\n    async function fetchUsers() {\n        const response = await fetch('https://fakestoreapi.com/users?limit=4') ;\n        const users = await response.json() ;\n        dispatch(addUsers(users))\n    }\n    async function fetchProducts() {\n        const response = await fetch('https://fakestoreapi.com/products?limit=4') ;\n        const users = await response.json() ;\n        dispatch(randomProducts(users))\n    }\n    useEffect(() => { \n            fetchUsers() ;\n            fetchProducts()\n        },[])\n    return (\n        <div className='home'>\n          {loggedIn ? \n          <> \n            <Navbar />\n            <Body /> \n          </> : <Redirect to='/sign-in' /> }\n        </div> \n    )\n} ;\n\nexport default Home;","C:\\Users\\toshiba\\new-project\\src\\components\\Category.js",["82"],"import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { useSelector } from 'react-redux' ;\r\nimport { Link } from 'react-router-dom' ;\r\nimport './Category.css' ;\r\n\r\nexport default function ControlledOpenSelect({ categoryName }) {\r\n  const categories = useSelector(state => state?.categories) ;\r\n  const [category, setCategory] = React.useState(categoryName ? categoryName : 'all');\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <div style={{height: '100%'}}>\r\n      <FormControl >\r\n        \r\n        <Select\r\n          labelId=\"demo-controlled-open-select-label\"\r\n          id=\"demo-controlled-open-select\"\r\n          open={open}\r\n          onClose={handleClose}\r\n          onOpen={handleOpen}\r\n          value={category}\r\n          \r\n        >\r\n          <MenuItem value={'all'}><Link className='link' to='/'>All</Link></MenuItem>\r\n            {categories?.map((item, index) => (\r\n            <MenuItem key={index} value={item}>\r\n            <Link className='link' to={`/${item}`}>{item}</Link>\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      \r\n    </div>\r\n  );\r\n}","C:\\Users\\toshiba\\new-project\\src\\components\\Body.js",[],"C:\\Users\\toshiba\\new-project\\src\\components\\Categories.js",["83","84"],"import React from 'react'\r\nimport './Categories.css' ;\r\nimport Card from '@material-ui/core/Card' ;\r\nimport { Link } from 'react-router-dom'\r\nimport Skeleton from '@material-ui/lab/Skeleton' ;\r\nimport { useSelector } from 'react-redux' ;\r\nfunction Categories({ title  , name}) {\r\n    const darkTheme = useSelector(state => state?.darkTheme) ;\r\n    let src = '' ;\r\n    if(title) {\r\n        switch (title) {\r\n            case 'electronics':\r\n                src='https://images-na.ssl-images-amazon.com/images/G/01/AmazonExports/Fuji/2020/May/Dashboard/Fuji_Dash_PC_1x._SY304_CB431800965_.jpg'\r\n                break;\r\n        \r\n            case 'jewelery' :\r\n                src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ4ry4XPSLFl8yzOVr34zDNvtq02t4WSuzqvw&usqp=CAU'\r\n                break;\r\n            case \"men's clothing\" : \r\n                src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQPRIaJnD_yXaFl1qM8YggAZrHF1hfCW2TaSw&usqp=CAU'\r\n                break \r\n            case \"women's clothing\" :\r\n                src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT3BpZBsLy_eCPTTPtsMBtEuT4m7y5d_T9L9Q&usqp=CAU'\r\n                break\r\n        }}\r\n    return (\r\n            <div className='categories' style={{backgroundColor : darkTheme ? '#282828' : '' , color: darkTheme ? 'white' : ''}}>\r\n                <h2>{title ? title : <Skeleton variant='text' />}</h2>\r\n                <div>{src ? <img src={src} alt={title} /> : <Skeleton variant='rect' height={320}/>}</div>\r\n                {title ? <Link to={`/${title}`} className='categories-link'>See more</Link> : <Skeleton variant='text'/>}\r\n            </div>\r\n    )\r\n} ;\r\n\r\nexport default Categories ;\r\n","C:\\Users\\toshiba\\new-project\\src\\App.js",["85"],"import React, { useEffect } from 'react'\r\nimport {BrowserRouter as Router , Route , Switch , Redirect } from 'react-router-dom' ;\r\nimport Home from './Home' ;\r\nimport { useDispatch , useSelector } from 'react-redux' ;\r\nimport CategoryProduct from './components/CategoryProduct' ;\r\nimport Sign from './components/Sign' ;\r\nimport { addCategories } from './actions' ;\r\nimport Cart from './components/Cart'\r\nimport './App.css'; \r\n\r\nfunction App() {\r\n    const user = useSelector(state => state.user.displayName)\r\n    const dispatch = useDispatch() ;\r\n    const categories = useSelector(state => state?.categories) ;\r\n    async function fetchCategories() {\r\n        const response = await fetch('https://fakestoreapi.com/products/categories') ;\r\n        const products = await response.json() ;\r\n        dispatch(addCategories(products))\r\n    }\r\n    useEffect(() => { \r\n        fetchCategories() ;\r\n    },[])\r\n    return (\r\n        <Router>\r\n            <Switch>  \r\n                    <Route exact path='/sign-in' component={Sign}/>\r\n                    { !user ?  <Redirect from='/' to='/sign-in' /> : <Redirect from='sign-in' to='/' /> }\r\n                    <Route exact path='/' component={Home}/>\r\n                    <Route exact path='/cart' component={Cart}/>\r\n                    \r\n                    {categories?.map((item , index) => (\r\n                        <Route exact strict path={`/${item}`} key={index}>\r\n                            <CategoryProduct key={index} category={item} clsName='category-product'/>\r\n                        </Route>\r\n                    ))}\r\n                    \r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App\r\n","C:\\Users\\toshiba\\new-project\\src\\components\\CategoryProduct.js",["86","87","88"],"import React, { useEffect  , useState } from 'react'\r\nimport Navbar from './Navbar' ;\r\nimport './CategoryProduct.css' ; \r\nimport Products from './Products' ;\r\nimport { useSelector } from 'react-redux' ;\r\nimport Fade from 'react-reveal/Fade' ;\r\nfunction CategoryProduct({category , clsName}) {\r\n    const darkTheme = useSelector(state => state.darkTheme)\r\n    const [input , setInput ] = useState('') ;\r\n    const [display , setDisplay ] = useState([]) ;\r\n    const [categoryProduct , setCategoryProduct ] = useState([]) ;\r\n    const [ requested , setRequested ] = useState([]) ;\r\n    async function fetchCategoryProducts() {\r\n        const response = await fetch(`https://fakestoreapi.com/products/category/${category}`) ;\r\n        const data = await response.json() ;\r\n        setCategoryProduct(data) ;\r\n    }\r\n    useEffect(() => {\r\n        fetchCategoryProducts() ;\r\n        let arr = categoryProduct?.map((item , index ) => {return item.title })\r\n        arr.fill(0) ;\r\n        setCategoryProduct(arr) ;\r\n    }, [])\r\n    const handleChange = e => {\r\n        setInput(e.target.value)\r\n    }\r\n    const object = [1 , 2, 3, 4]\r\n    let array = categoryProduct?.map((item , index ) => {return item.title })\r\n\r\n    useEffect(() => {\r\n        if( input ) {\r\n            array.fill(false)\r\n            let s = array ;\r\n            let requst = [] ;\r\n            s.fill(' ') ;\r\n            console.log(`s =>> ${s}`) ;\r\n            categoryProduct?.filter((item , index) => {\r\n                if(item.title.toUpperCase().search(input.toUpperCase()) > -1 ) {\r\n                    array[index] = false ;\r\n                    requst.push(item.title.toUpperCase().search(input.toUpperCase()))\r\n                } else {\r\n                    array[index] = true ;\r\n                    requst.push(item.title.toUpperCase().search(input.toUpperCase()))\r\n                }})\r\n                setDisplay(array) ;\r\n                setRequested(requst) ;\r\n                console.log(requested, 'requesteddd===================') ;\r\n        }\r\n        }, [input])\r\n        \r\n    return (\r\n        <div style={{ backgroundColor: darkTheme ? '#101010' : '#EAEDED'}}>\r\n            <Navbar category={category} handleChange={handleChange} />\r\n            <div className='category-product'>\r\n                { categoryProduct.length > 0  ? categoryProduct?.map((item , index ) => (\r\n                    <div style={{display : !display[index] || !input ? 'flex' : 'none' }}>\r\n                        <Products item={item} index={index} requested={requested[index]} input={input} />\r\n                    </div>\r\n                )) : object.map((item , index) => (\r\n                    <Products index={index} />\r\n                ))}\r\n                \r\n            </div>\r\n            { display.every((item) => {\r\n                return item === true \r\n            }) && input ? \r\n            <Fade right>\r\n            <p style={{color: darkTheme && 'white' , minHeight: '100%'}} className='search-failed'>No results found for <strong>\"{input}\"</strong></p>\r\n            </Fade>\r\n             : \r\n             null}\r\n        </div>\r\n    )\r\n} ;\r\n\r\nexport default CategoryProduct ;\r\n","C:\\Users\\toshiba\\new-project\\src\\components\\Product.js",[],"C:\\Users\\toshiba\\new-project\\src\\components\\Sign.js",[],"C:\\Users\\toshiba\\new-project\\src\\components\\Cart.js",["89"],"import React, { useEffect , useState } from 'react'\r\nimport './Cart.css' ;\r\nimport { useSelector } from 'react-redux' ;\r\nimport { Link } from 'react-router-dom' ;\r\nimport Navbar from './Navbar' ;\r\nimport Products from './Products' ;\r\nimport Avatar from '@material-ui/core/Avatar' ;\r\n\r\nfunction Cart() {\r\n    const darkTheme = useSelector(state => state.darkTheme) ;\r\n    const user = useSelector(state => state.user)\r\n    const cart = useSelector(state => state.cart) ;\r\n    const [clicked , setClicked ] = useState(false)\r\n    const [payAccount , setPayAccount] = useState(0) ;\r\n    useEffect(() => {\r\n        console.log('useEffect =>> ')\r\n        if(cart.length) {\r\n            let pay = 0 ;\r\n            for(let i=0 ; i < cart.length ; i++) {\r\n            pay += cart[i].price\r\n            console.log('pay =>> ',pay)\r\n        }\r\n        setPayAccount(pay)\r\n        } else {\r\n            setPayAccount(0)\r\n        }\r\n    } ,[cart.length])\r\n    const render = () => {\r\n        setClicked(!clicked)\r\n    }\r\n    \r\n    return (\r\n        <div >\r\n        <Navbar /> \r\n        { !user.email && !user.photoURL ? '' :\r\n        <div className='dashborad' style={{ backgroundColor: darkTheme ? '#101010' : '' , color: darkTheme ? 'white' : ''}} >\r\n            <div className='dashborad-left'>\r\n                <h3>{user.displayName}</h3>\r\n                { user.email && <strong>email: <a href={`mailto:${user.email}`} >{user.email} </a></strong> }\r\n            </div>\r\n            { user.photoURL ? <Avatar alt={user.displayName} src={user.photoURL} style={{minHeight: '65px' , minWidth: '65px'}} /> : <Avatar style={{minHeight: '65px' , minWidth: '65px', backgroundColor: darkTheme && '#282828'}}>{user.displayName.charAt(0)}</Avatar>}\r\n        </div> \r\n        }\r\n        \r\n        <div className={`cart ${cart.length ? 'reverse' : '' }`} style={{ backgroundColor: darkTheme ? '#101010' : '' , color: darkTheme ? 'white' : ''}} >\r\n        { !cart.length ?\r\n            <div className='cart-left' style={{ backgroundColor: darkTheme ? '#282828' : '' , color: darkTheme ? 'white' : ''}}>\r\n                <img src='https://www.x1.com/wp-content/uploads/2018/09/Shopping-cart-icon.png' alt='cart' />\r\n                <div className='empty'>\r\n                    <h1>Your Amazon Cart is empty</h1>\r\n                    <Link className='cart-link' to='/'>Shop today's deals </Link>\r\n                </div>\r\n            </div> \r\n            : <div className='category-product'>\r\n                {cart.map((item , index) => (\r\n                <Products item={item} key={index} atCart render={render} />\r\n            ))  }\r\n            </div> }\r\n                <div className='cart-right' style={{ backgroundColor: darkTheme ? '#282828' : '' , color: darkTheme ? 'white' : ''}}>\r\n                    <h1>Subtotal</h1>\r\n                    <div className='cart-right-total'>\r\n                        <p>Number of items : {cart.length ? cart.length : <span>0</span> }</p>\r\n                        <p>Pay Account : {cart.length ? <span>${payAccount}</span> : <span>$0</span> }</p>\r\n                    </div>\r\n                </div>\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart ;\r\n","C:\\Users\\toshiba\\new-project\\src\\components\\Products.js",["90","91"],"import React, { useEffect , useState } from 'react'\r\nimport './Products.css' ;\r\nimport Skeleton from '@material-ui/lab/Skeleton' ; \r\nimport StarIcon from '@material-ui/icons/StarRateRounded' ;\r\nimport Button from '@material-ui/core/Button' ;\r\nimport amber from '@material-ui/core/colors/amber' ;\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart' ;\r\nimport { useDispatch , useSelector } from 'react-redux' ;\r\nimport { addProduct , removeProduct  } from '../actions' ;\r\nimport Fade from 'react-reveal/Fade'\r\nimport RemoveShoppingCartIcon from \"@material-ui/icons/RemoveShoppingCart\" ;\r\n\r\nfunction Products({item , index , atCart , render , requested , input}) {\r\n    const darkTheme = useSelector(state=> state.darkTheme) ;\r\n    const cart = useSelector(state => state?.cart) \r\n    const [rating , setRating] = useState() ;\r\n    const [ stored , setStored ] = useState(false) \r\n    const dispatch = useDispatch() ;\r\n    let array = [1 , 2 ,3 ,4 ] ;   \r\n    let newArray ;\r\n    const randomNumber = (min , max ) => {return Math.floor(Math.random() * (max - min + 1) ) + min }\r\n    useEffect(() => {\r\n        if (item) {\r\n        let num = randomNumber(2 , 5)\r\n        newArray = array.slice(0 , num) ;\r\n        setRating(newArray)\r\n        }\r\n    },[])\r\n    useEffect(() => {\r\n        if(stored) {\r\n            const tomeoutId = setTimeout(() => {\r\n                setStored(false)\r\n            }, 1500);\r\n        }\r\n    },[stored])\r\n    console.log(rating )\r\n\r\n    const addToCart = () => {\r\n        console.log('item =>>' , item)\r\n        dispatch(addProduct(item))\r\n        setStored(true)\r\n    }\r\n    const removeFromCart = () => {\r\n        dispatch(removeProduct(item))\r\n        console.log('removed')\r\n        setStored(true)\r\n        render()\r\n    }\r\n    console.log('cart =>>' , cart)\r\n    return (\r\n        <div className={`single-product ${darkTheme ? 'black' : ''} ${atCart ? 'cart-left' : 'withmargin'}`} style={{backgroundColor : darkTheme ? '#282828' : ''}}>\r\n            { item ? <img src={item.image} alt={item.title} /> : <Skeleton className='skeleton1' variant='rect' height={350} width={440} />}\r\n            <div className='product-info' >\r\n                 <h1>{ item ? \r\n                 <> \r\n                    {item.title.slice(0 ,requested )}\r\n                    <strong style={{color: '#CD8E3C'}}>{item.title.slice(requested , requested + input?.length )}</strong>\r\n                    <span>{item.title.slice(requested + input?.length , item.title.length )}</span>\r\n                 </>\r\n                 : \r\n                 <Skeleton variant='text' height={120} /> }</h1> \r\n                {item ? <strong><span>price :</span> ${item.price}</strong> : <Skeleton variant='text' height={20} width={120} />}\r\n                { item ? \r\n                <div>\r\n                    {rating?.map((item , index) => (\r\n                    <StarIcon style={{color: amber[900]}}/>\r\n                    ))}\r\n                </div>: <Skeleton variant='text' height={20} width={120} /> }\r\n                {item ? <h2>About this item</h2> : <Skeleton variant='text' height={20} width={120} /> }\r\n                {item ? <p>{item.description}</p> : <Skeleton  variant='text' height={100} />}\r\n\r\n               {item ?  <Button\r\n                onClick={ !atCart ?  () => addToCart()  : () => removeFromCart() }\r\n                startIcon={<AddShoppingCartIcon />}\r\n                size='medium'\r\n                variant='contained' \r\n                style={{ backgroundColor : amber[800] ,marginTop: '20px' , maxWidth :'300px', fontFamily: 'Open Sans, sans-serif'}}\r\n                >\r\n                { !atCart ? 'Add To Cart' : 'Remove From Cart'} </Button> : <Skeleton className='skeleton2'  variant='rect' height={40} width={200} />}\r\n                <Fade when={stored}>\r\n                    <h2>Item {!atCart ? 'added' : 'removed'} {!atCart ? <AddShoppingCartIcon /> : <RemoveShoppingCartIcon /> }</h2>\r\n                </Fade>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Products\r\n","C:\\Users\\toshiba\\new-project\\src\\components\\StyledAuth.js",[],"C:\\Users\\toshiba\\new-project\\src\\components\\getCountry.js",[],"C:\\Users\\toshiba\\new-project\\src\\components\\Menu.js",["92"],"import React, { useState } from 'react'\r\nimport './Menu.css' ;\r\n\r\n\r\nfunction Menu({ setNavOpen , navOpen }) {\r\n    return (\r\n        <button className={`menu ${navOpen && 'opened' }`} onClick={() => setNavOpen(!navOpen ) } aria-label=\"Main Menu\">\r\n            <svg width=\"100\" height=\"100\" viewBox=\"0 0 100 100\">\r\n                <path className=\"line line1\" d=\"M 20,29.000046 H 80.000231 C 80.000231,29.000046 94.498839,28.817352 94.532987,66.711331 94.543142,77.980673 90.966081,81.670246 85.259173,81.668997 79.552261,81.667751 75.000211,74.999942 75.000211,74.999942 L 25.000021,25.000058\" />\r\n                <path className=\"line line2\" d=\"M 20,50 H 80\" />\r\n                <path className=\"line line3\" d=\"M 20,70.999954 H 80.000231 C 80.000231,70.999954 94.498839,71.182648 94.532987,33.288669 94.543142,22.019327 90.966081,18.329754 85.259173,18.331003 79.552261,18.332249 75.000211,25.000058 75.000211,25.000058 L 25.000021,74.999942\" />\r\n            </svg>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Menu ;",{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":25,"column":11,"nodeType":"99","endLine":25,"endColumn":13,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":11,"column":20,"nodeType":"103","messageId":"104","endLine":11,"endColumn":31},{"ruleId":"101","severity":1,"message":"105","line":3,"column":8,"nodeType":"103","messageId":"104","endLine":3,"endColumn":12},{"ruleId":"106","severity":1,"message":"107","line":11,"column":9,"nodeType":"108","messageId":"109","endLine":25,"endColumn":10},{"ruleId":"97","severity":1,"message":"110","line":22,"column":7,"nodeType":"99","endLine":22,"endColumn":9,"suggestions":"111"},{"ruleId":"97","severity":1,"message":"112","line":23,"column":8,"nodeType":"99","endLine":23,"endColumn":10,"suggestions":"113"},{"ruleId":"114","severity":1,"message":"115","line":37,"column":52,"nodeType":"116","messageId":"117","endLine":37,"endColumn":54},{"ruleId":"97","severity":1,"message":"118","line":49,"column":12,"nodeType":"99","endLine":49,"endColumn":19,"suggestions":"119"},{"ruleId":"97","severity":1,"message":"120","line":27,"column":8,"nodeType":"99","endLine":27,"endColumn":21,"suggestions":"121"},{"ruleId":"97","severity":1,"message":"122","line":25,"column":20,"nodeType":"123","endLine":25,"endColumn":40},{"ruleId":"101","severity":1,"message":"124","line":31,"column":19,"nodeType":"103","messageId":"104","endLine":31,"endColumn":28},{"ruleId":"101","severity":1,"message":"125","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":25},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchProducts' and 'fetchUsers'. Either include them or remove the dependency array.","ArrayExpression",["128"],"no-unused-vars","'setCategory' is assigned a value but never used.","Identifier","unusedVar","'Card' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'fetchCategories'. Either include it or remove the dependency array.",["129"],"React Hook useEffect has missing dependencies: 'categoryProduct' and 'fetchCategoryProducts'. Either include them or remove the dependency array.",["130"],"array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'array', 'categoryProduct', and 'requested'. Either include them or remove the dependency array.",["131"],"React Hook useEffect has a missing dependency: 'cart'. Either include it or remove the dependency array.",["132"],"Assignments to the 'newArray' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'tomeoutId' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},"Update the dependencies array to be: [fetchProducts, fetchUsers]",{"range":"143","text":"144"},"Update the dependencies array to be: [fetchCategories]",{"range":"145","text":"146"},"Update the dependencies array to be: [categoryProduct, fetchCategoryProducts]",{"range":"147","text":"148"},"Update the dependencies array to be: [array, categoryProduct, input, requested]",{"range":"149","text":"150"},"Update the dependencies array to be: [cart, cart.length]",{"range":"151","text":"152"},[929,931],"[fetchProducts, fetchUsers]",[900,902],"[fetchCategories]",[1017,1019],"[categoryProduct, fetchCategoryProducts]",[2038,2045],"[array, categoryProduct, input, requested]",[928,941],"[cart, cart.length]"]